name: Tests

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'docs/**'
      - 'src/byro/locale/**'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - 'docs/**'
      - 'src/byro/locale/**'
  workflow_dispatch: {}

jobs:
  test:
    runs-on: ubuntu-latest
    name: Tests
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9, '3.10', 3.11]
        database: [sqlite, postgres, mysql]
        exclude:
          - database: mysql
            python-version: 3.9
          - database: mysql
            python-version: 3.11
          - database: sqlite
            python-version: 3.9
          - database: sqlite
            python-version: 3.11
    steps:
      - uses: actions/checkout@v4
      - uses: getong/mariadb-action@v1.1
        with:
          mariadb version: '10.7'
          mysql database: 'byro'
          mysql user: 'byro'
          mysql password: 'byro'
        if: matrix.database == 'mysql'
      - uses: harmon758/postgresql-action@v1
        with:
          postgresql version: '14'
          postgresql db: 'byro'
          postgresql user: 'postgres'
          postgresql password: 'postgres'
        if: matrix.database == 'postgres'
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install gettext
      - name: Install system dependencies for mysql
        run: sudo apt update && sudo apt install mariadb-client-10.6 mariadb-server
        if: matrix.database == 'mysql'
      - name: Install Python dependencies
        run: python -m pip install -Ue "src[dev]"
      - name: Install MySQL dependencies
        run: python -m pip install -Ue "src[mysql]"
        if: matrix.database == 'mysql'
      - name: Install Postgres dependencies
        run: python -m pip install -Ue "src[postgres]"
        if: matrix.database == 'postgres'
      - name: Run checks
        run: python manage.py check --deploy
        working-directory: ./src
      - name: Compile locales
        run: python manage.py compilemessages
        working-directory: ./src
      - name: Run tests
        working-directory: ./src
        run: python -m pytest --reruns=3 -nauto -p no:sugar --cov=./ --cov-report=xml --maxfail=100 tests
        env:
          BYRO_CONFIG_FILE: 'tests/byro.${{ matrix.database }}.cfg'
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          files: src/coverage.xml
          fail_ci_if_error: true
        if: matrix.database == 'postgres' && matrix.python-version == '3.10'
